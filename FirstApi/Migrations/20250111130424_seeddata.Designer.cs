// <auto-generated />
using FirstApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstApi.Migrations
{
    [DbContext(typeof(CityContext))]
    [Migration("20250111130424_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstApi.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Des")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Des = "des tehran",
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 2,
                            Des = "des Shiraz",
                            Name = "Shiraz"
                        },
                        new
                        {
                            Id = 3,
                            Des = "des Esfehan",
                            Name = "Esfehan"
                        });
                });

            modelBuilder.Entity("FirstApi.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Des")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Des = "des noqte 1",
                            Name = "noghte 1"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Des = "des noqte 2",
                            Name = "noghte 2"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            Des = "des noqte 3",
                            Name = "noghte 3"
                        });
                });

            modelBuilder.Entity("FirstApi.Entities.PointOfInterest", b =>
                {
                    b.HasOne("FirstApi.Entities.City", "City")
                        .WithMany("POIs")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("FirstApi.Entities.City", b =>
                {
                    b.Navigation("POIs");
                });
#pragma warning restore 612, 618
        }
    }
}
